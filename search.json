[{"path":"https://kwb-r.github.io/kwb.raindrop/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Rustler. Author, maintainer. RAINDROP. Funder. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rustler M (2025). kwb.raindrop: R Package Optimisation Simulations Rainwater Management Simulations Performed Calculation Engine Provided Tandler. R package version 0.0.0.9000, https://github.com/KWB-R/kwb.raindrop.","code":"@Manual{,   title = {kwb.raindrop: R Package for Optimisation Simulations for Rainwater Management Simulations Performed with Calculation Engine Provided by Tandler},   author = {Michael Rustler},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/KWB-R/kwb.raindrop}, }"},{"path":"https://kwb-r.github.io/kwb.raindrop/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Package for Optimisation Simulations for Rainwater Management Simulations Performed with Calculation Engine Provided by Tandler","text":"details install KWB-R packages checkout installation tutorial.","code":"### Optionally: specify GitHub Personal Access Token (GITHUB_PAT) ### See here why this might be important for you: ### https://kwb-r.github.io/kwb.pkgbuild/articles/install.html#set-your-github_pat  # Sys.setenv(GITHUB_PAT = \"mysecret_access_token\")  # Install package \"remotes\" from CRAN if (! require(\"remotes\")) {   install.packages(\"remotes\", repos = \"https://cloud.r-project.org\") }  # Install KWB package 'kwb.raindrop' from GitHub remotes::install_github(\"KWB-R/kwb.raindrop\")"},{"path":"https://kwb-r.github.io/kwb.raindrop/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_read_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Read values of all (or selected) datasets — h5_read_values","title":"Read values of all (or selected) datasets — h5_read_values","text":"Read values (selected) datasets","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_read_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read values of all (or selected) datasets — h5_read_values","text":"","code":"h5_read_values(   h5,   paths = NULL,   simplify_scalars = TRUE,   timeseries_as_tibble = TRUE,   ts_names = c(\"time\", \"value\") )"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_read_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read values of all (or selected) datasets — h5_read_values","text":"h5 open hdf5r::H5File paths character vector; NULL read simplify_scalars logical: simplify H5S_SCALAR length-1 atom timeseries_as_tibble logical: convert 2xN / Nx2 tibble(time,value) ts_names character(2): names time/value columns","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_read_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read values of all (or selected) datasets — h5_read_values","text":"named list","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_validate_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate what would be written where (pre-flight check) — h5_validate_write","title":"Validate what would be written where (pre-flight check) — h5_validate_write","text":"Checks named list values open HDF5 file summarizes, per dataset path, current dimensions (fallback via h5$ls()), length/column count supplied value, suggested handling (SCALAR/1D/ND TS(2-col) 2-column time series).","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_validate_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate what would be written where (pre-flight check) — h5_validate_write","text":"","code":"h5_validate_write(h5, values)"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_validate_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate what would be written where (pre-flight check) — h5_validate_write","text":"h5 open hdf5r::H5File (e.g., opened mode = \"r+\"). values named list. Names absolute dataset paths (starting \"/\"); values R objects written (scalar, vector, matrix/array, 2-column data.frame/tibble time series).","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_validate_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate what would be written where (pre-flight check) — h5_validate_write","text":"tibble columns: path – dataset path (normalizing \"//\" → \"/\"). cur_dims – detected dims \"2x4\" \"SCALAR\". val_len – length supplied value (data frames: nrow). df_cols – number columns (data frames/tibbles; otherwise NA). decision – heuristic label: \"SCALAR\", \"1D\", \"ND\", \"TS(2-col)\". note – additional note (e.g., \"found\").","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_validate_write.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Validate what would be written where (pre-flight check) — h5_validate_write","text":"get_simple_extent_dims() incorrectly reports dataset SCALAR, function falls back dimensions derived list_h5_datasets(h5) (.e., h5$ls(recursive = TRUE)). Names values normalized multiple leading slashes collapse single leading slash.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_validate_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate what would be written where (pre-flight check) — h5_validate_write","text":"","code":"if (FALSE) { # \\dontrun{ library(hdf5r) h5 <- H5File$new(\"input.h5\", mode = \"r+\")  vals <- list(   \"/Parameters/OutputPath\" = \"C:/temp/out.h5\",   \"/Rain/Hyetograph\" = tibble::tibble(time = c(0, 10, 20, 30),                                       value = c(0, 5, 12, 0)),   \"/Measures/.../LayerThickness\" = c(150L, 150L) )  h5_validate_write(h5, vals) } # }"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_write_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Write (updated) values back into existing HDF5 datasets (robust) — h5_write_values","title":"Write (updated) values back into existing HDF5 datasets (robust) — h5_write_values","text":"Writes scalars, vectors, matrices/arrays, 2-column data frames/tibbles (treated time series) existing HDF5 datasets. dataset reports SCALAR incorrectly, function can infer target dimensions supplied value resize accordingly.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_write_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write (updated) values back into existing HDF5 datasets (robust) — h5_write_values","text":"","code":"h5_write_values(   h5,   values,   resize = TRUE,   strict = TRUE,   prefer_rows = NA,   ts_cols = c(\"time\", \"value\"),   scalar_strategy = c(\"error\", \"first\", \"collapse\"),   collapse_sep = \";\",   verbose = FALSE )"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_write_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write (updated) values back into existing HDF5 datasets (robust) — h5_write_values","text":"h5 open hdf5r::H5File (e.g., mode = \"r+\"). values Named list: names absolute dataset paths, values R objects write. resize Logical. TRUE, resize datasets via set_extent() shapes differ. strict Logical. TRUE, stop first error; otherwise warn skip. prefer_rows Logical(1) NA. 2-column time series: NA keeps dataset orientation (2xN first dim == 2), TRUE forces 2xN, FALSE forces Nx2. ts_cols Character(2). Column names pull time-series data frames (default c(\"time\",\"value\")). scalar_strategy One \"error\", \"first\", \"collapse\". Controls non-length-1 values handled true SCALAR datasets. collapse_sep Character. Separator used scalar_strategy = \"collapse\". verbose Logical. TRUE, prints per-path dimension info.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_write_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write (updated) values back into existing HDF5 datasets (robust) — h5_write_values","text":"Invisibly returns character vector written dataset paths.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/h5_write_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write (updated) values back into existing HDF5 datasets (robust) — h5_write_values","text":"","code":"if (FALSE) { # \\dontrun{ vals <- h5_read_values(h5) vals[[\"/Parameters/OutputPath\"]] <- \"C:/temp/out.h5\" h5_write_values(h5, vals, resize = TRUE, scalar_strategy = \"first\", verbose = TRUE) } # }"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/list_h5_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"List all datasets (recursive) — list_h5_datasets","title":"List all datasets (recursive) — list_h5_datasets","text":"List datasets (recursive)","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/list_h5_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all datasets (recursive) — list_h5_datasets","text":"","code":"list_h5_datasets(h5)"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/list_h5_datasets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all datasets (recursive) — list_h5_datasets","text":"h5 open hdf5r::H5File.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/list_h5_datasets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all datasets (recursive) — list_h5_datasets","text":"tibble columns: path, obj_type, dims, maxdims.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/list_h5_datasets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all datasets (recursive) — list_h5_datasets","text":"","code":"if (FALSE) { # \\dontrun{ h5 <- hdf5r::H5File$new(\"file.h5\", mode = \"r\") list_h5_datasets(h5) } # }"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/read_hdf5_timeseries.html","id":null,"dir":"Reference","previous_headings":"","what":"Read HDF5 Results Time Series from HDF5 Group into a Long Tibble — read_hdf5_timeseries","title":"Read HDF5 Results Time Series from HDF5 Group into a Long Tibble — read_hdf5_timeseries","text":"Extracts datasets (subgroups) given HDF5 group converts 2×N matrix tidy long table. assumes first row holds time/index vector second row values.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/read_hdf5_timeseries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read HDF5 Results Time Series from HDF5 Group into a Long Tibble — read_hdf5_timeseries","text":"","code":"read_hdf5_timeseries(ts_groupvariable)"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/read_hdf5_timeseries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read HDF5 Results Time Series from HDF5 Group into a Long Tibble — read_hdf5_timeseries","text":"ts_groupvariable hdf5r::H5Group open HDF5 group whose children time-series datasets stored 2×N numeric matrices ([1, ] = time/index, [2, ] = value). Typically group like \"/Zustandsvariablen\" similar model output file.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/read_hdf5_timeseries.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read HDF5 Results Time Series from HDF5 Group into a Long Tibble — read_hdf5_timeseries","text":"tibble columns: variable (character): dataset name within group. time (numeric): time index taken first row. value (numeric): values taken second row.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/read_hdf5_timeseries.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read HDF5 Results Time Series from HDF5 Group into a Long Tibble — read_hdf5_timeseries","text":"function lists child objects ts_groupvariable, filters datasets (H5I_DATASET), reads dataset memory, stacks one long tibble. Datasets expected 2×N; storage differs (e.g., N×2 1D), adapt reading logic accordingly.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/read_hdf5_timeseries.html","id":"assumptions","dir":"Reference","previous_headings":"","what":"Assumptions","title":"Read HDF5 Results Time Series from HDF5 Group into a Long Tibble — read_hdf5_timeseries","text":"dataset ts_groupvariable numeric matrix shape 2×N. Row 1 time/index vector; row 2 contains values.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/read_hdf5_timeseries.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read HDF5 Results Time Series from HDF5 Group into a Long Tibble — read_hdf5_timeseries","text":"","code":"if (FALSE) { # \\dontrun{ library(hdf5r) f <- H5File$new(\"Optimierung_MuldenRigole.h5\", mode = \"r\") grp <- f[[\"Zustandsvariablen\"]] ts_long <- read_hdf5_timeseries(grp) head(ts_long) f$close_all() } # }"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/run_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run an rainwater management model executable with an input file — run_model","title":"Run an rainwater management model executable with an input file — run_model","text":"Builds runs system command form \"<path_exe> <path_input>\", normalising paths absolute paths. Progress (optionally) command output wrapped kwb.utils::catAndRun() neat logging.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run an rainwater management model executable with an input file — run_model","text":"","code":"run_model(path_exe, path_input, print_output = FALSE, debug = TRUE, ...)"},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run an rainwater management model executable with an input file — run_model","text":"path_exe character(1) Path model executable (e.g., .exe Windows). file must exist. path_input character(1) Path model input file passed single argument executable. file must exist. print_output logical(1) TRUE, stream process output console return exit status (integer). FALSE (default), capture return command output character vector. debug logical(1) Forwarded kwb.utils::catAndRun(dbg = ...) enable/disable progress message. Default: TRUE. ... Additional arguments passed base::shell(), e.g. timeout Windows. See ?base::shell details.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run an rainwater management model executable with an input file — run_model","text":"print_output = FALSE, character vector containing captured standard output command. print_output = TRUE, (invisible) integer exit status returned shell() (0 indicates success).","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/run_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run an rainwater management model executable with an input file — run_model","text":"path_exe path_input converted absolute, normalised paths via fs::path_abs() base::normalizePath(). command executed base::shell(), Windows invokes system shell. non-Windows platforms, prefer base::system() need full POSIX semantics.","code":""},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/run_model.html","id":"side-effects","dir":"Reference","previous_headings":"","what":"Side effects","title":"Run an rainwater management model executable with an input file — run_model","text":"Executes external program may read/write files depending model. Ensure trust executable paths provided.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.raindrop/reference/run_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run an rainwater management model executable with an input file — run_model","text":"","code":"if (FALSE) { # \\dontrun{ # Example: run a hypothetical model with an input file exe   <- \"C:/path/to/model.exe\" input <- \"C:/path/to/input.h5\"  # Capture output as character vector out <- run_model(exe, input, print_output = FALSE)  # Stream output and get exit status status <- run_model(exe, input, print_output = TRUE) } # }"},{"path":"https://kwb-r.github.io/kwb.raindrop/news/index.html","id":"kwbraindrop-0009000","dir":"Changelog","previous_headings":"","what":"kwb.raindrop 0.0.0.9000","title":"kwb.raindrop 0.0.0.9000","text":"Added NEWS.md file track changes package. see https://style.tidyverse.org/news.html writing good NEWS.md","code":""}]
